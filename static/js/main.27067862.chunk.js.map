{"version":3,"sources":["components/container/DynamicContentWrapper/data/img/an-entire-mood.gif","components/container/DynamicContentWrapper/data/img/amused-AF.gif","components/container/DynamicContentWrapper/data/img/a-fan-of-The-Reds.gif","components/container/DynamicContentWrapper/data/img/being-lowkey.gif","components/container/DynamicContentWrapper/data/img/in-good-vibez.gif","components/presentational/Header/index.js","components/container/DynamicContentWrapper/data/index.js","components/presentational/DefaultContent/index.js","components/presentational/Reaction/index.js","components/presentational/Scenarios/index.js","components/container/DynamicContentWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","scenarios","id","name","imgURL","beingLowkey","reason","anEntireMood","amusedAF","aFanOfTheReds","inGoodVibez","DefaultContent","props","txtSpring","useSpring","from","opacity","to","config","mass","btnSpring","span","style","type","class","onClick","handleViewScenarios","Reaction","scenario","matchedScenarios","spring","role","data-dismiss","aria-label","handleCloseReaction","aria-hidden","src","alt","Scenarios","springs","useTrail","length","transform","map","index","key","marginRight","handleShowReaction","DynamicContentWrapper","setState","showingReaction","showingScenarios","e","filter","s","toLowerCase","trim","target","innerHTML","state","dynamicContent","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27067862.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/an-entire-mood.a9ba98e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/amused-AF.bb7bf0b5.gif\";","module.exports = __webpack_public_path__ + \"static/media/a-fan-of-The-Reds.b2105d5a.gif\";","module.exports = __webpack_public_path__ + \"static/media/being-lowkey.fb59c303.gif\";","module.exports = __webpack_public_path__ + \"static/media/in-good-vibez.34e5193b.gif\";","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary shadow-sm\">\r\n      <span className=\"navbar-brand mx-auto\">when KGOSI reacts</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import anEntireMood from \"./img/an-entire-mood.gif\";\r\nimport amusedAF from \"./img/amused-AF.gif\";\r\nimport aFanOfTheReds from \"./img/a-fan-of-The-Reds.gif\";\r\nimport beingLowkey from \"./img/being-lowkey.gif\";\r\nimport inGoodVibez from \"./img/in-good-vibez.gif\";\r\n\r\nconst scenarios = [\r\n  {\r\n    id: 1,\r\n    name: \"being lowkey\",\r\n    imgURL: beingLowkey,\r\n    reason: \"the oppposite of a spider is a tall building\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"an entire mood\",\r\n    imgURL: anEntireMood,\r\n    reason: \"laxatives are the beginnings of an emergency\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"amused AF\",\r\n    imgURL: amusedAF,\r\n    reason:\r\n      \"the best sandwich that Fikile Mbalula ever had was with Lindiwe Zulu's cat\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"dropping knowledge\",\r\n    imgURL: aFanOfTheReds,\r\n    reason: \"a parking lot is a shelter for automobiles,\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"in good vibez\",\r\n    imgURL: inGoodVibez,\r\n    reason: \"the sky is a blue bandanna that the earth wears\",\r\n  },\r\n];\r\n\r\nexport default scenarios;\r\n","import React from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst DefaultContent = (props) => {\r\n  const txtSpring = useSpring({\r\n    from: {\r\n      opacity: 0.2,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n    config: {\r\n      mass: 4,\r\n    },\r\n  });\r\n  const btnSpring = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n    config: {\r\n      mass: 12,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <p className=\"h4 font-weight-lighter\">\r\n        <animated.span style={{ ...txtSpring }}>\r\n          I have a nephew named Kgosi, really dope dude - his reactions to\r\n          sceanrios is the stuff of legends\r\n        </animated.span>\r\n      </p>\r\n      <div className=\"text-right\">\r\n        <animated.span style={{ ...btnSpring }}>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-lg btn-light mt-3\"\r\n            onClick={props.handleViewScenarios}\r\n          >\r\n            view scenarios\r\n          </button>\r\n        </animated.span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DefaultContent;\r\n","import React from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./index.css\";\r\n\r\nconst Reaction = (props) => {\r\n  let [scenario] = [...props.matchedScenarios];\r\n  const spring = useSpring({\r\n    from: {\r\n      opacity: 0.4,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n    config: {\r\n      mass: 16,\r\n    },\r\n  });\r\n\r\n  return scenario ? (\r\n    <div\r\n      className=\"alert alert-light alert-dismissible fade show text-center\"\r\n      role=\"alert\"\r\n    >\r\n      <p className=\"text-primary\">\r\n        <h4 className=\"\">\r\n          Kgosi is <span className=\"font-weight-bold\">{scenario.name}</span>\r\n        </h4>\r\n        because {scenario.reason}\r\n      </p>\r\n\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        onClick={props.handleCloseReaction}\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <animated.span style={{ ...spring }}>\r\n        <img\r\n          className=\"card-img-top mr-3\"\r\n          src={scenario.imgURL}\r\n          alt={`Kgosi ${scenario.imgURL}`}\r\n        />\r\n      </animated.span>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Reaction;\r\n","import React from \"react\";\r\nimport { useTrail, animated } from \"react-spring\";\r\n\r\nconst Scenarios = (props) => {\r\n  const springs = useTrail(props.scenarios.length, {\r\n    from: {\r\n      opacity: 0.2,\r\n      transform: \"translateY(-5px)\",\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n      transform: \"translateY(0px)\",\r\n    },\r\n    config: {\r\n      mass: 7,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <div className=\"card-body text-center\">\r\n        <h3 class=\"card-subtitle mb-2 text-muted\">available scenarios</h3>\r\n        {springs.map((spring, index) => {\r\n          return (\r\n            <a\r\n              className=\"card-link text-nowrap text-center\"\r\n              key={props.scenarios[index].id}\r\n            >\r\n              <animated.span\r\n                key={index}\r\n                style={{ ...spring, marginRight: \"10px\" }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn-lg btn-light mt-3\"\r\n                  onClick={props.handleShowReaction}\r\n                >\r\n                  {props.scenarios[index].name}\r\n                </button>\r\n              </animated.span>\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scenarios;\r\n","import React, { Component } from \"react\";\r\nimport scenarios from \"./data\";\r\n\r\nimport DefaultContent from \"../../presentational/DefaultContent\";\r\nimport Reaction from \"../../presentational/Reaction\";\r\nimport Scenarios from \"../../presentational/Scenarios\";\r\n\r\nclass DynamicContentWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scenarios,\r\n      showingScenarios: false,\r\n      showingReaction: false,\r\n      matchedScenarios: [],\r\n    };\r\n  }\r\n\r\n  handleCloseReaction = () => {\r\n    this.setState({\r\n      showingReaction: false,\r\n      showingScenarios: true,\r\n    });\r\n  };\r\n\r\n  handleShowReaction = (e) => {\r\n    let matchedScenarios = scenarios.filter((s) => {\r\n      return (\r\n        s.name.toLowerCase().trim() === e.target.innerHTML.toLowerCase().trim()\r\n      );\r\n    });\r\n    this.setState({\r\n      matchedScenarios,\r\n      showingReaction: true,\r\n      showingScenarios: false,\r\n    });\r\n  };\r\n\r\n  handleViewScenarios = () => {\r\n    this.setState({\r\n      showingScenarios: true,\r\n      showingReaction: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let dynamicContent = null;\r\n    if (this.state.showingScenarios) {\r\n      dynamicContent = (\r\n        <Scenarios\r\n          scenarios={this.state.scenarios}\r\n          handleShowReaction={this.handleShowReaction}\r\n        />\r\n      );\r\n    } else if (this.state.showingReaction) {\r\n      dynamicContent = (\r\n        <Reaction\r\n          matchedScenarios={this.state.matchedScenarios}\r\n          handleCloseReaction={this.handleCloseReaction}\r\n        />\r\n      );\r\n    } else {\r\n      dynamicContent = (\r\n        <DefaultContent handleViewScenarios={this.handleViewScenarios} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container dynamic-content-wrapper mt-4\">\r\n        {dynamicContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicContentWrapper;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./components/presentational/Header\";\r\nimport DynamicContentWrapper from \"./components/container/DynamicContentWrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <DynamicContentWrapper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootswatch/dist/sketchy/bootstrap.min.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}