{"version":3,"sources":["DATA/img/an-entire-mood.gif","DATA/img/amused-AF.gif","DATA/img/a-fan-of-The-Reds.gif","DATA/img/being-lowkey.gif","DATA/img/cramming-for-exams.gif","DATA/img/in-good-vibez.gif","components/presentational/Header/index.js","DATA/index.js","components/presentational/DefaultContent/index.js","components/presentational/Reaction/index.js","components/presentational/Scenario/index.js","components/presentational/Scenarios/index.js","components/container/DynamicContentWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","scenarios","id","name","imgURL","beingLowkey","reason","anEntireMood","amusedAF","aFanOfTheReds","inGoodVibez","crammingForExams","jumbotronAnimate","scale","borderTopRightRadius","jumbotronTransition","duration","easeIn","pAnimate","opacity","pTransition","btnStyles","paddingRight","btnAnimate","fontSize","btnTransition","delay","DefaultContent","props","div","animate","transition","p","button","type","styles","onClick","handleViewScenarios","Reaction","scenario","matchedScenarios","spring","useSpring","from","to","config","mass","leftTxtSpring","transform","rightTxtSpring","role","style","data-dismiss","aria-label","handleCloseReaction","aria-hidden","span","src","alt","Scenario","handleShowReaction","marginRight","class","Scenarios","springs","useTrail","length","map","index","key","DynamicContentWrapper","setState","showingReaction","showingScenarios","e","filter","s","toLowerCase","trim","target","innerHTML","state","dynamicContent","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oIAAAA,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,2C,qKCW5BC,G,MARA,WACb,OACE,yBAAKC,UAAU,4DACb,0BAAMA,UAAU,wBAAhB,4B,kICyCSC,EAxCG,CAChB,CACEC,GAAI,EACJC,KAAM,eACNC,OAAQC,IACRC,OAAQ,gDAEV,CACEJ,GAAI,EACJC,KAAM,iBACNC,OAAQG,IACRD,OAAQ,gDAEV,CACEJ,GAAI,EACJC,KAAM,YACNC,OAAQI,IACRF,OACE,8EAEJ,CACEJ,GAAI,EACJC,KAAM,qBACNC,OAAQK,IACRH,OAAQ,8CAEV,CACEJ,GAAI,EACJC,KAAM,gBACNC,OAAQM,IACRJ,OAAQ,mDAEV,CACEJ,GAAI,EACJC,KAAM,qBACNC,OAAQO,IACRL,OAAQ,gD,QCvCNM,EAAmB,CACvBC,MAAO,CAAC,IAAM,KAAM,GACpBC,qBAAsB,CAAC,MAAO,OAE1BC,EAAsB,CAAEC,SAAU,IAAMC,QAAQ,GAGhDC,EAAW,CAAEC,QAAS,CAAC,GAAK,IAC5BC,EAAc,CAAEJ,SAAU,IAAKC,QAAQ,GAGvCI,EAAY,CAChBC,aAAc,UAEVC,EAAa,CACjBJ,QAAS,CAAC,GAAK,GACfG,aAAc,OACdE,SAAU,CAAC,OAAQ,SAEfC,EAAgB,CAAET,SAAU,IAAKU,MAAO,GAgC/BC,EA9BQ,SAACC,GACtB,OACE,kBAAC,IAAOC,IAAR,CACE7B,UAAU,YACV8B,QAASlB,EACTmB,WAAYhB,GAEZ,kBAAC,IAAOiB,EAAR,CACEhC,UAAU,yBACV8B,QAASZ,EACTa,WAAYX,GAHd,0EAOA,yBAAKpB,UAAU,cACb,kBAAC,IAAOiC,OAAR,CACEC,KAAK,SACLlC,UAAU,wBACVmC,OAAQd,EACRe,QAASR,EAAMS,oBACfP,QAASP,EACTQ,WAAYN,GANd,kB,qBCuCOa,G,MA3EE,SAACV,GAAW,IACtBW,EADqB,YACLX,EAAMY,kBADD,GAEpBC,EAASC,YAAU,CACvBC,KAAM,CACJxB,QAAS,IAEXyB,GAAI,CACFzB,QAAS,GAEX0B,OAAQ,CACNC,KAAM,MAGJC,EAAgBL,YAAU,CAC9BC,KAAM,CACJK,UAAW,oBAEbJ,GAAI,CACFI,UAAW,mBAEbH,OAAQ,CACNC,KAAM,MAGJG,EAAiBP,YAAU,CAC/BC,KAAM,CACJK,UAAW,mBAEbJ,GAAI,CACFI,UAAW,mBAEbH,OAAQ,CACNC,KAAM,MAIV,OAAOP,EACL,yBACEvC,UAAU,4DACVkD,KAAK,SAEL,uBAAGlD,UAAU,gBACX,kBAAC,IAAS6B,IAAV,CAAcsB,MAAK,eAAOF,IACxB,wBAAIjD,UAAU,IAAd,YACW,0BAAMA,UAAU,oBAAoBuC,EAASpC,QAG1D,kBAAC,IAAS0B,IAAV,CAAcsB,MAAK,eAAOJ,IAA1B,UACU,IACR,0BAAM/C,UAAU,qCACbuC,EAASjC,UAKhB,4BACE4B,KAAK,SACLlC,UAAU,QACVoD,eAAa,QACbC,aAAW,QACXjB,QAASR,EAAM0B,qBAEf,0BAAMC,cAAY,QAAlB,SAEF,kBAAC,IAASC,KAAV,CAAeL,MAAK,eAAOV,IACzB,yBACEzC,UAAU,oBACVyD,IAAKlB,EAASnC,OACdsD,IAAG,gBAAWnB,EAASnC,YAI3B,OCzDSuD,G,MAhBE,SAAC,GAA8C,IAA5CpB,EAA2C,EAA3CA,SAAUE,EAAiC,EAAjCA,OAAQmB,EAAyB,EAAzBA,mBACpC,OACE,uBAAG5D,UAAU,qCACX,kBAAC,IAASwD,KAAV,CAAeL,MAAK,2BAAOV,GAAP,IAAeoB,YAAa,UAC9C,4BACE3B,KAAK,SACL4B,MAAM,wBACN1B,QAASwB,GAERrB,EAASpC,UC4BL4D,EAlCG,SAAC,GAAuC,IAArC9D,EAAoC,EAApCA,UAAW2D,EAAyB,EAAzBA,mBACxBI,EAAUC,YAAShE,EAAUiE,OAAQ,CACzCvB,KAAM,CACJxB,QAAS,IAEXyB,GAAI,CACFzB,QAAS,GAEX0B,OAAQ,CACNC,KAAM,KAIV,OACE,yBAAK9C,UAAU,iBACb,yBAAKA,UAAU,yBACb,uBAAG8D,MAAM,4DAAT,uBAGCE,EAAQG,KAAI,SAAC1B,EAAQ2B,GACpB,OACE,kBAAC,EAAD,CACEC,IAAKpE,EAAUmE,GAAOlE,GACtBuC,OAAQA,EACRmB,mBAAoBA,EACpBrB,SAAUtC,EAAUmE,WCgDnBE,E,kDAnEb,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IASR0B,oBAAsB,WACpB,EAAKiB,SAAS,CACZC,iBAAiB,EACjBC,kBAAkB,KAbH,EAiBnBb,mBAAqB,SAACc,GACpB,IAAIlC,EAAmBvC,EAAU0E,QAAO,SAACC,GACvC,OACEA,EAAEzE,KAAK0E,cAAcC,SAAWJ,EAAEK,OAAOC,UAAUH,cAAcC,UAGrE,EAAKP,SAAS,CACZ/B,mBACAgC,iBAAiB,EACjBC,kBAAkB,KA1BH,EA8BnBpC,oBAAsB,WACpB,EAAKkC,SAAS,CACZE,kBAAkB,EAClBD,iBAAiB,KA/BnB,EAAKS,MAAQ,CACXhF,YACAwE,kBAAkB,EAClBD,iBAAiB,EACjBhC,iBAAkB,IANH,E,qDAsCjB,IAAI0C,EAAiB,KAqBrB,OAnBEA,EADEC,KAAKF,MAAMR,iBAEX,kBAAC,EAAD,CACExE,UAAWkF,KAAKF,MAAMhF,UACtB2D,mBAAoBuB,KAAKvB,qBAGpBuB,KAAKF,MAAMT,gBAElB,kBAAC,EAAD,CACEhC,iBAAkB2C,KAAKF,MAAMzC,iBAC7Bc,oBAAqB6B,KAAK7B,sBAK5B,kBAAC,EAAD,CAAgBjB,oBAAqB8C,KAAK9C,sBAK5C,yBAAKrC,UAAU,+CACZkF,O,GA9D2BE,aCGrBC,MATf,WACE,OACE,yBAAKrF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCGcsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ed1b6893.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/an-entire-mood.a9ba98e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/amused-AF.bb7bf0b5.gif\";","module.exports = __webpack_public_path__ + \"static/media/a-fan-of-The-Reds.b2105d5a.gif\";","module.exports = __webpack_public_path__ + \"static/media/being-lowkey.fb59c303.gif\";","module.exports = __webpack_public_path__ + \"static/media/cramming-for-exams.c5c79368.gif\";","module.exports = __webpack_public_path__ + \"static/media/in-good-vibez.34e5193b.gif\";","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary shadow-sm\">\r\n      <span className=\"navbar-brand mx-auto\">the KGOSI improv show</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import anEntireMood from \"./img/an-entire-mood.gif\";\r\nimport amusedAF from \"./img/amused-AF.gif\";\r\nimport aFanOfTheReds from \"./img/a-fan-of-The-Reds.gif\";\r\nimport beingLowkey from \"./img/being-lowkey.gif\";\r\nimport crammingForExams from \"./img/cramming-for-exams.gif\";\r\nimport inGoodVibez from \"./img/in-good-vibez.gif\";\r\n\r\nconst scenarios = [\r\n  {\r\n    id: 1,\r\n    name: \"being lowkey\",\r\n    imgURL: beingLowkey,\r\n    reason: \"the oppposite of a spider is a tall building\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"an entire mood\",\r\n    imgURL: anEntireMood,\r\n    reason: \"laxatives are the beginnings of an emergency\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"amused AF\",\r\n    imgURL: amusedAF,\r\n    reason:\r\n      \"the best sandwich that Fikile Mbalula ever had was with Lindiwe Zulu's cat\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"dropping knowledge\",\r\n    imgURL: aFanOfTheReds,\r\n    reason: \"a parking lot is a shelter for automobiles\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"in good vibez\",\r\n    imgURL: inGoodVibez,\r\n    reason: \"the sky is a blue bandanna that the earth wears\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"cramming for exams\",\r\n    imgURL: crammingForExams,\r\n    reason: \"psychologists couldnâ€™t become psychics\",\r\n  },\r\n];\r\n\r\nexport default scenarios;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// for jumbotron animation\r\nconst jumbotronAnimate = {\r\n  scale: [0.98, 1.01, 1],\r\n  borderTopRightRadius: [\"55%\", \"2%\"],\r\n};\r\nconst jumbotronTransition = { duration: 0.75, easeIn: true };\r\n\r\n// for p tag animation\r\nconst pAnimate = { opacity: [0.2, 1] };\r\nconst pTransition = { duration: 1.2, easeIn: true };\r\n\r\n// for button animation\r\nconst btnStyles = {\r\n  paddingRight: \"-120px\",\r\n};\r\nconst btnAnimate = {\r\n  opacity: [0.1, 1],\r\n  paddingRight: \"10px\",\r\n  fontSize: [\"120%\", \"118%\"],\r\n};\r\nconst btnTransition = { duration: 1.5, delay: 1 };\r\n\r\nconst DefaultContent = (props) => {\r\n  return (\r\n    <motion.div\r\n      className=\"jumbotron\"\r\n      animate={jumbotronAnimate}\r\n      transition={jumbotronTransition}\r\n    >\r\n      <motion.p\r\n        className=\"h4 font-weight-lighter\"\r\n        animate={pAnimate}\r\n        transition={pTransition}\r\n      >\r\n        I have a nephew named Kgosi, he can re-enact scenes like an improv pro\r\n      </motion.p>\r\n      <div className=\"text-right\">\r\n        <motion.button\r\n          type=\"button\"\r\n          className=\"btn-lg btn-light mt-3\"\r\n          styles={btnStyles}\r\n          onClick={props.handleViewScenarios}\r\n          animate={btnAnimate}\r\n          transition={btnTransition}\r\n        >\r\n          view scenes\r\n        </motion.button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default DefaultContent;\r\n","import React from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./index.css\";\r\n\r\nconst Reaction = (props) => {\r\n  let [scenario] = [...props.matchedScenarios];\r\n  const spring = useSpring({\r\n    from: {\r\n      opacity: 0.4,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n    config: {\r\n      mass: 16,\r\n    },\r\n  });\r\n  const leftTxtSpring = useSpring({\r\n    from: {\r\n      transform: \"translateX(-5px)\",\r\n    },\r\n    to: {\r\n      transform: \"translateX(0px)\",\r\n    },\r\n    config: {\r\n      mass: 16,\r\n    },\r\n  });\r\n  const rightTxtSpring = useSpring({\r\n    from: {\r\n      transform: \"translateX(5px)\",\r\n    },\r\n    to: {\r\n      transform: \"translateX(0px)\",\r\n    },\r\n    config: {\r\n      mass: 12,\r\n    },\r\n  });\r\n\r\n  return scenario ? (\r\n    <div\r\n      className=\"alert alert-light alert-dismissible fade show text-center\"\r\n      role=\"alert\"\r\n    >\r\n      <p className=\"text-primary\">\r\n        <animated.div style={{ ...rightTxtSpring }}>\r\n          <h4 className=\"\">\r\n            Kgosi is <span className=\"font-weight-bold\">{scenario.name}</span>\r\n          </h4>\r\n        </animated.div>\r\n        <animated.div style={{ ...leftTxtSpring }}>\r\n          because{\" \"}\r\n          <span className=\"font-weight-light scenario-reason\">\r\n            {scenario.reason}\r\n          </span>\r\n        </animated.div>\r\n      </p>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        onClick={props.handleCloseReaction}\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n      <animated.span style={{ ...spring }}>\r\n        <img\r\n          className=\"card-img-top mr-3\"\r\n          src={scenario.imgURL}\r\n          alt={`Kgosi ${scenario.imgURL}`}\r\n        />\r\n      </animated.span>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Reaction;\r\n","import React from \"react\";\r\nimport { animated } from \"react-spring\";\r\n\r\nconst Scenario = ({ scenario, spring, handleShowReaction }) => {\r\n  return (\r\n    <a className=\"card-link text-nowrap text-center\">\r\n      <animated.span style={{ ...spring, marginRight: \"10px\" }}>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-lg btn-light mt-3\"\r\n          onClick={handleShowReaction}\r\n        >\r\n          {scenario.name}\r\n        </button>\r\n      </animated.span>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Scenario;\r\n","import React from \"react\";\r\nimport { useTrail } from \"react-spring\";\r\nimport \"./index.css\";\r\n\r\nimport Scenario from \"../Scenario\";\r\n\r\nconst Scenarios = ({ scenarios, handleShowReaction }) => {\r\n  const springs = useTrail(scenarios.length, {\r\n    from: {\r\n      opacity: 0.2,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n    },\r\n    config: {\r\n      mass: 7,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <div className=\"card-body text-center\">\r\n        <p class=\"card-subtitle display-4 mb-2 font-weight-bold text-muted\">\r\n          available scenarios\r\n        </p>\r\n        {springs.map((spring, index) => {\r\n          return (\r\n            <Scenario\r\n              key={scenarios[index].id}\r\n              spring={spring}\r\n              handleShowReaction={handleShowReaction}\r\n              scenario={scenarios[index]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scenarios;\r\n","import React, { Component } from \"react\";\r\nimport scenarios from \"../../../DATA/index\";\r\n\r\nimport DefaultContent from \"../../presentational/DefaultContent\";\r\nimport Reaction from \"../../presentational/Reaction\";\r\nimport Scenarios from \"../../presentational/Scenarios\";\r\n\r\n/*\r\n **it qualifies as a container component because it has local state whose values it passes\r\n **down to child components via props\r\n */\r\nclass DynamicContentWrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scenarios,\r\n      showingScenarios: false,\r\n      showingReaction: false,\r\n      matchedScenarios: [],\r\n    };\r\n  }\r\n\r\n  handleCloseReaction = () => {\r\n    this.setState({\r\n      showingReaction: false,\r\n      showingScenarios: true,\r\n    });\r\n  };\r\n\r\n  handleShowReaction = (e) => {\r\n    let matchedScenarios = scenarios.filter((s) => {\r\n      return (\r\n        s.name.toLowerCase().trim() === e.target.innerHTML.toLowerCase().trim()\r\n      );\r\n    });\r\n    this.setState({\r\n      matchedScenarios,\r\n      showingReaction: true,\r\n      showingScenarios: false,\r\n    });\r\n  };\r\n\r\n  handleViewScenarios = () => {\r\n    this.setState({\r\n      showingScenarios: true,\r\n      showingReaction: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let dynamicContent = null;\r\n    if (this.state.showingScenarios) {\r\n      dynamicContent = (\r\n        <Scenarios\r\n          scenarios={this.state.scenarios}\r\n          handleShowReaction={this.handleShowReaction}\r\n        />\r\n      );\r\n    } else if (this.state.showingReaction) {\r\n      dynamicContent = (\r\n        <Reaction\r\n          matchedScenarios={this.state.matchedScenarios}\r\n          handleCloseReaction={this.handleCloseReaction}\r\n        />\r\n      );\r\n    } else {\r\n      dynamicContent = (\r\n        <DefaultContent handleViewScenarios={this.handleViewScenarios} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container dynamic-content-wrapper mt-4 mb-4\">\r\n        {dynamicContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicContentWrapper;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./components/presentational/Header\";\r\nimport DynamicContentWrapper from \"./components/container/DynamicContentWrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <DynamicContentWrapper />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootswatch/dist/sketchy/bootstrap.min.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}